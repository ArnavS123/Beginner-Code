#include <stdio.h>
#define MAX_STUDENTS 100 // Maximum number of students in the database

struct Student {
    int id;
    char name[50];
    int age;
    float grade;
};

struct Student students[MAX_STUDENTS]; // Array to store students
int numStudents = 0; // Number of students currently in the database

// Function to add a new student to the database
void addStudent() {
    if (numStudents < MAX_STUDENTS) {
        struct Student newStudent;
        printf("Enter student ID: ");
        scanf("%d", &newStudent.id);
        printf("Enter student name: ");
        scanf("%s", newStudent.name);
        printf("Enter student age: ");
        scanf("%d", &newStudent.age);
        printf("Enter student grade: ");
        scanf("%f", &newStudent.grade);
        students[numStudents++] = newStudent;
        printf("Student added successfully!\n");
    } else {
        printf("Error: Maximum number of students reached.\n");
    }
}

// Function to display all students in the database
void displayStudents() {
    printf("--- Student Database ---\n");
    for (int i = 0; i < numStudents; i++) {
        printf("ID: %d\n", students[i].id);
        printf("Name: %s\n", students[i].name);
        printf("Age: %d\n", students[i].age);
        printf("Grade: %.2f\n", students[i].grade);
        printf("------------\n");
    }
}

// Function to search for a student by ID
void searchStudent() {
    int searchID;
    printf("Enter student ID to search: ");
    scanf("%d", &searchID);
    for (int i = 0; i < numStudents; i++) {
        if (students[i].id == searchID) {
            printf("ID: %d\n", students[i].id);
            printf("Name: %s\n", students[i].name);
            printf("Age: %d\n", students[i].age);
            printf("Grade: %.2f\n", students[i].grade);
            return;
        }
    }
    printf("Student not found.\n");
}

// Function to calculate the average grade of all students
void calculateAverageGrade() {
    float sum = 0;
    for (int i = 0; i < numStudents; i++) {
        sum += students[i].grade;
    }
    float average = numStudents > 0 ? sum / numStudents : 0;
    printf("Average grade: %.2f\n", average);
}

// Function to delete a student by ID
void deleteStudent() {
    int deleteID;
    printf("Enter student ID to delete: ");
    scanf("%d", &deleteID);
    int found = 0;
    for (int i = 0; i < numStudents; i++) {
        if (students[i].id == deleteID) {
            // Move all students after the deleted student to fill the gap
            for (int j = i; j < numStudents - 1; j++) {
                students[j] = students[j + 1];
            }
            numStudents--;
            printf("Student deleted successfully!\n");
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Student not found.\n");
    }
}

int main() {
    int choice;
    while (1) {
        printf("1. Add Student\n");
        printf("2. Display Students\n");
        printf("3. Search Student\n");
        printf("4. Calculate Average Grade\n");
        printf("5. Delete Student\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addStudent();
                break;
            case 2:
                displayStudents();
                break;
            case 3:
                searchStudent();
                break;
            case 4:
                calculateAverageGrade();
                break;
            case 5:
                deleteStudent();
                break;
            case 6:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
